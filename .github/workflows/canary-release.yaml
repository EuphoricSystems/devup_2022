name: "/canary-release"
on:
  issue_comment:
    types: [created]

permissions:
  contents: write # for checkout & releases
  pull-requests: write # for comments
  packages: write # for publish

jobs:
  canary-release:
    name: canary-release
    runs-on: ubuntu-latest
    if: |
      github.event.repository.is_template == false &&
      github.event_name == 'issue_comment' &&
      (github.event.comment.author_association == 'MEMBER' || 
       github.event.comment.author_association == 'OWNER' || 
       github.event.comment.author_association == 'CONTRIBUTOR' || 
       github.event.comment.author_association == 'COLLABORATOR') &&
      startsWith(github.event.comment.body, '/canary-release')
    steps:
      - name: get pr information
        uses: actions/github-script@v4
        id: pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              core.info(`Got PR: ${JSON.stringify(result.data)}`)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      - uses: actions/github-script@v4
        if: github.context.issue.number > 0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸŽ‰ Canary Release.'
            })
